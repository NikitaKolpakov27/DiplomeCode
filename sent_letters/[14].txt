=========ЗАГОЛОВКИ ПИСЬМА==========
FROM: ('=?UTF-8?B?0JrQvtC70L/QsNC60L7QsiDQnS7QoS4=?=', 'nik.kolpakov@inbox.ru')
TO: =?UTF-8?B?bV9kcnl1Y2hlbmtv?= <m_dryuchenko@mail.ru>
DATE: Wed, 22 Dec 2021 18:47:43 +0300
SUBJECT: =?UTF-8?B?0JDQu9Cz0L7RgNC40YLQvCDRhdGN0YjQuNGA0L7QstCw0L3QuNGP?=
MESSAGE_ID: <1640188063.744576036@f513.i.mail.ru>


=====ТЕЛО ПИСЬМА==========='NoneType' object has no attribute 'decode''NoneType' object has no attribute 'decode'
=====ТЕЛО ПИСЬМА==========='NoneType' object has no attribute 'decode'unsigned long long hashAlg(const unsigned char* msgData, int msgSize, unsigned long long hash0, unsigned int N)
{
    int indBlock = 0;
    unsigned long long hashVal, block, blockTmp;
    hashVal = hash0;

    while(indBlock < msgSize)
    {
        unsigned short* roundKeys = generateKeys(hashVal, N);

        memcpy(&block, &msgData[indBlock], sizeof(block));
        blockTmp = block;
        block ^= hashVal;   // первый XOR в схеме

        unsigned short x0 = static_cast<unsigned short>(block >> 48),
                x1 = static_cast<unsigned short>(block >> 32),
                x2 = static_cast<unsigned short>(block >> 16),
                x3 = static_cast<unsigned short>(block),
                c0,c1,c2,c3;
        // Раунды
        for(int r=0; r < N; r++)
        {
            c2 = x0 ^ roundKeys[r];
            c0 = x2 ^ mainFunc(c2, x1);
            c1 = x3 ^ x2;
            c3 = x1;

        }
        // Объединяем в блок
        block = c0;
        block = (block << 16) | c1;
        block = (block << 16) | c2;
        block = (block << 16) | c3;

        hashVal ^= block;   // второй XOR в схеме
        hashVal ^= blockTmp;  // и третий XOR

        indBlock += sizeof(block);

        delete[]roundKeys;
    }
    return hashVal;
}
=====ТЕЛО ПИСЬМА==========='NoneType' object has no attribute 'decode'unsigned long long hashAlg(const unsigned char* msgData, int msgSize, unsigned long long hash0, unsigned int N)
{
    int indBlock = 0;
    unsigned long long hashVal, block, blockTmp;
    hashVal = hash0;

    while(indBlock < msgSize)
    {
        unsigned short* roundKeys = generateKeys(hashVal, N);

        memcpy(&block, &msgData[indBlock], sizeof(block));
        blockTmp = block;
        block ^= hashVal;   // первый XOR в схеме

        unsigned short x0 = static_cast<unsigned short>(block >> 48),
                x1 = static_cast<unsigned short>(block >> 32),
                x2 = static_cast<unsigned short>(block >> 16),
                x3 = static_cast<unsigned short>(block),
                c0,c1,c2,c3;
        // Раунды
        for(int r=0; r < N; r++)
        {
            c2 = x0 ^ roundKeys[r];
            c0 = x2 ^ mainFunc(c2, x1);
            c1 = x3 ^ x2;
            c3 = x1;

        }
        // Объединяем в блок
        block = c0;
        block = (block << 16) | c1;
        block = (block << 16) | c2;
        block = (block << 16) | c3;

        hashVal ^= block;   // второй XOR в схеме
        hashVal ^= blockTmp;  // и третий XOR

        indBlock += sizeof(block);

        delete[]roundKeys;
    }
    return hashVal;
}'utf-8' codec can't decode byte 0xff in position 0: invalid start byte'utf-8' codec can't decode byte 0xff in position 0: invalid start byte
=====ТЕЛО ПИСЬМА==========='NoneType' object has no attribute 'decode'unsigned long long hashAlg(const unsigned char* msgData, int msgSize, unsigned long long hash0, unsigned int N)
{
    int indBlock = 0;
    unsigned long long hashVal, block, blockTmp;
    hashVal = hash0;

    while(indBlock < msgSize)
    {
        unsigned short* roundKeys = generateKeys(hashVal, N);

        memcpy(&block, &msgData[indBlock], sizeof(block));
        blockTmp = block;
        block ^= hashVal;   // первый XOR в схеме

        unsigned short x0 = static_cast<unsigned short>(block >> 48),
                x1 = static_cast<unsigned short>(block >> 32),
                x2 = static_cast<unsigned short>(block >> 16),
                x3 = static_cast<unsigned short>(block),
                c0,c1,c2,c3;
        // Раунды
        for(int r=0; r < N; r++)
        {
            c2 = x0 ^ roundKeys[r];
            c0 = x2 ^ mainFunc(c2, x1);
            c1 = x3 ^ x2;
            c3 = x1;

        }
        // Объединяем в блок
        block = c0;
        block = (block << 16) | c1;
        block = (block << 16) | c2;
        block = (block << 16) | c3;

        hashVal ^= block;   // второй XOR в схеме
        hashVal ^= blockTmp;  // и третий XOR

        indBlock += sizeof(block);

        delete[]roundKeys;
    }
    return hashVal;
}'utf-8' codec can't decode byte 0xff in position 0: invalid start byte'utf-8' codec can't decode byte 0xff in position 0: invalid start byte'utf-8' codec can't decode byte 0xff in position 0: invalid start byte